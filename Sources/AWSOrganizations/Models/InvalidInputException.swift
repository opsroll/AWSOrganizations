//
// InvalidInputException.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** &lt;p&gt;The requested operation failed because you provided invalid values for one or more of the request parameters. This exception includes a reason that contains additional information about the violated limit:&lt;/p&gt; &lt;note&gt; &lt;p&gt;Some of the reasons in the following list might not be applicable to this specific API or operation:&lt;/p&gt; &lt;/note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;IMMUTABLE_POLICY: You specified a policy that is managed by AWS and cannot be modified.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INPUT_REQUIRED: You must include a value for all required parameters.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_ENUM: You specified a value that is not valid for that parameter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_FULL_NAME_TARGET: You specified a full name that contains invalid characters.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_LIST_MEMBER: You provided a list to a parameter that contains at least one invalid value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_PARTY_TYPE_TARGET: You specified the wrong type of entity (account, organization, or email) as a party.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_PAGINATION_TOKEN: Get the value for the NextToken parameter from the response to a previous call of the operation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_PATTERN: You provided a value that doesn&#39;t match the required pattern.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_PATTERN_TARGET_ID: You specified a policy target ID that doesn&#39;t match the required pattern.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_ROLE_NAME: You provided a role name that is not valid. A role name canâ€™t begin with the reserved prefix &#39;AWSServiceRoleFor&#39;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_SYNTAX_ORGANIZATION_ARN: You specified an invalid ARN for the organization.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INVALID_SYNTAX_POLICY_ID: You specified an invalid policy ID. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MAX_FILTER_LIMIT_EXCEEDED: You can specify only one filter parameter for the operation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MAX_LENGTH_EXCEEDED: You provided a string parameter that is longer than allowed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MAX_VALUE_EXCEEDED: You provided a numeric parameter that has a larger value than allowed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MIN_LENGTH_EXCEEDED: You provided a string parameter that is shorter than allowed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MIN_VALUE_EXCEEDED: You provided a numeric parameter that has a smaller value than allowed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS: You can move an account only between entities in the same root.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; */

open class InvalidInputException: Codable {

    public var message: ExceptionMessage?
    public var reason: InvalidInputExceptionReason?


    
    public init(message: ExceptionMessage?, reason: InvalidInputExceptionReason?) {
        self.message = message
        self.reason = reason
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(message, forKey: "Message")
        try container.encodeIfPresent(reason, forKey: "Reason")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        message = try container.decodeIfPresent(ExceptionMessage.self, forKey: "Message")
        reason = try container.decodeIfPresent(InvalidInputExceptionReason.self, forKey: "Reason")
    }
}

