//
// HandshakeParty.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Identifies a participant in a handshake. */

open class HandshakeParty: Codable {

    /** &lt;p&gt;The unique identifier (ID) for the party.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for handshake ID string requires \&quot;h-\&quot; followed by from 8 to 32 lower-case letters or digits.&lt;/p&gt; */
    public var id: HandshakePartyId
    /** The type of party. */
    public var type: HandshakePartyType


    
    public init(id: HandshakePartyId, type: HandshakePartyType) {
        self.id = id
        self.type = type
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(id, forKey: "Id")
        try container.encode(type, forKey: "Type")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decode(HandshakePartyId.self, forKey: "Id")
        type = try container.decode(HandshakePartyType.self, forKey: "Type")
    }
}

