//
// UpdateOrganizationalUnitRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class UpdateOrganizationalUnitRequest: Codable {

    /** &lt;p&gt;The new name that you want to assign to the OU.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; that is used to validate this parameter is a string of any of the characters in the ASCII character range.&lt;/p&gt; */
    public var name: OrganizationalUnitName?
    /** &lt;p&gt;The unique identifier (ID) of the OU that you want to rename. You can get the ID from the &lt;a&gt;ListOrganizationalUnitsForParent&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for an organizational unit ID string requires \&quot;ou-\&quot; followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second \&quot;-\&quot; dash and from 8 to 32 additional lower-case letters or digits.&lt;/p&gt; */
    public var organizationalUnitId: OrganizationalUnitId


    
    public init(name: OrganizationalUnitName?, organizationalUnitId: OrganizationalUnitId) {
        self.name = name
        self.organizationalUnitId = organizationalUnitId
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(name, forKey: "Name")
        try container.encode(organizationalUnitId, forKey: "OrganizationalUnitId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        name = try container.decodeIfPresent(OrganizationalUnitName.self, forKey: "Name")
        organizationalUnitId = try container.decode(OrganizationalUnitId.self, forKey: "OrganizationalUnitId")
    }
}

