//
// MoveAccountRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class MoveAccountRequest: Codable {

    /** &lt;p&gt;The unique identifier (ID) of the account that you want to move.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for an account ID string requires exactly 12 digits.&lt;/p&gt; */
    public var accountId: AccountId
    /** &lt;p&gt;The unique identifier (ID) of the root or organizational unit that you want to move the account to.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for a parent ID string requires one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Root: a string that begins with \&quot;r-\&quot; followed by from 4 to 32 lower-case letters or digits.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Organizational unit (OU): a string that begins with \&quot;ou-\&quot; followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second \&quot;-\&quot; dash and from 8 to 32 additional lower-case letters or digits.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; */
    public var destinationParentId: ParentId
    /** &lt;p&gt;The unique identifier (ID) of the root or organizational unit that you want to move the account from.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for a parent ID string requires one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Root: a string that begins with \&quot;r-\&quot; followed by from 4 to 32 lower-case letters or digits.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Organizational unit (OU): a string that begins with \&quot;ou-\&quot; followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second \&quot;-\&quot; dash and from 8 to 32 additional lower-case letters or digits.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; */
    public var sourceParentId: ParentId


    
    public init(accountId: AccountId, destinationParentId: ParentId, sourceParentId: ParentId) {
        self.accountId = accountId
        self.destinationParentId = destinationParentId
        self.sourceParentId = sourceParentId
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(accountId, forKey: "AccountId")
        try container.encode(destinationParentId, forKey: "DestinationParentId")
        try container.encode(sourceParentId, forKey: "SourceParentId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        accountId = try container.decode(AccountId.self, forKey: "AccountId")
        destinationParentId = try container.decode(ParentId.self, forKey: "DestinationParentId")
        sourceParentId = try container.decode(ParentId.self, forKey: "SourceParentId")
    }
}

