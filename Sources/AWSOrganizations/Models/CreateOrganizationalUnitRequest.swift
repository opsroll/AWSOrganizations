//
// CreateOrganizationalUnitRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class CreateOrganizationalUnitRequest: Codable {

    /** The friendly name to assign to the new OU. */
    public var name: OrganizationalUnitName
    /** &lt;p&gt;The unique identifier (ID) of the parent root or OU in which you want to create the new OU.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for a parent ID string requires one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Root: a string that begins with \&quot;r-\&quot; followed by from 4 to 32 lower-case letters or digits.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Organizational unit (OU): a string that begins with \&quot;ou-\&quot; followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second \&quot;-\&quot; dash and from 8 to 32 additional lower-case letters or digits.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; */
    public var parentId: ParentId


    
    public init(name: OrganizationalUnitName, parentId: ParentId) {
        self.name = name
        self.parentId = parentId
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(name, forKey: "Name")
        try container.encode(parentId, forKey: "ParentId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        name = try container.decode(OrganizationalUnitName.self, forKey: "Name")
        parentId = try container.decode(ParentId.self, forKey: "ParentId")
    }
}

