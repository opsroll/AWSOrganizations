//
// InviteAccountToOrganizationRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class InviteAccountToOrganizationRequest: Codable {

    /** Additional information that you want to include in the generated email to the recipient account owner. */
    public var notes: HandshakeNotes?
    /** &lt;p&gt;The identifier (ID) of the AWS account that you want to invite to join your organization. This is a JSON object that contains the following elements: &lt;/p&gt; &lt;p&gt; &lt;code&gt;{ \&quot;Type\&quot;: \&quot;ACCOUNT\&quot;, \&quot;Id\&quot;: \&quot;&amp;lt;&lt;i&gt; &lt;b&gt;account id number&lt;/b&gt; &lt;/i&gt;&amp;gt;\&quot; }&lt;/code&gt; &lt;/p&gt; &lt;p&gt;If you use the AWS CLI, you can submit this as a single string, similar to the following example:&lt;/p&gt; &lt;p&gt; &lt;code&gt;--target Id&#x3D;123456789012,Type&#x3D;ACCOUNT&lt;/code&gt; &lt;/p&gt; &lt;p&gt;If you specify &lt;code&gt;\&quot;Type\&quot;: \&quot;ACCOUNT\&quot;&lt;/code&gt;, then you must provide the AWS account ID number as the &lt;code&gt;Id&lt;/code&gt;. If you specify &lt;code&gt;\&quot;Type\&quot;: \&quot;EMAIL\&quot;&lt;/code&gt;, then you must specify the email address that is associated with the account.&lt;/p&gt; &lt;p&gt; &lt;code&gt;--target Id&#x3D;bill@example.com,Type&#x3D;EMAIL&lt;/code&gt; &lt;/p&gt; */
    public var target: HandshakeParty


    
    public init(notes: HandshakeNotes?, target: HandshakeParty) {
        self.notes = notes
        self.target = target
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(notes, forKey: "Notes")
        try container.encode(target, forKey: "Target")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        notes = try container.decodeIfPresent(HandshakeNotes.self, forKey: "Notes")
        target = try container.decode(HandshakeParty.self, forKey: "Target")
    }
}

