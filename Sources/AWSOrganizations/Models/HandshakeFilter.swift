//
// HandshakeFilter.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Specifies the criteria that are used to select the handshakes for the operation. */

open class HandshakeFilter: Codable {

    /** &lt;p&gt;Specifies the type of handshake action.&lt;/p&gt; &lt;p&gt;If you specify &lt;code&gt;ActionType&lt;/code&gt;, you cannot also specify &lt;code&gt;ParentHandshakeId&lt;/code&gt;.&lt;/p&gt; */
    public var actionType: ActionType?
    /** &lt;p&gt;Specifies the parent handshake. Only used for handshake types that are a child of another type.&lt;/p&gt; &lt;p&gt;If you specify &lt;code&gt;ParentHandshakeId&lt;/code&gt;, you cannot also specify &lt;code&gt;ActionType&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; for handshake ID string requires \&quot;h-\&quot; followed by from 8 to 32 lower-case letters or digits.&lt;/p&gt; */
    public var parentHandshakeId: HandshakeId?


    
    public init(actionType: ActionType?, parentHandshakeId: HandshakeId?) {
        self.actionType = actionType
        self.parentHandshakeId = parentHandshakeId
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(actionType, forKey: "ActionType")
        try container.encodeIfPresent(parentHandshakeId, forKey: "ParentHandshakeId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        actionType = try container.decodeIfPresent(ActionType.self, forKey: "ActionType")
        parentHandshakeId = try container.decodeIfPresent(HandshakeId.self, forKey: "ParentHandshakeId")
    }
}

